@use "utilities" as *;

// Layout shell, with navigation bar and main content area.
.content {
  align-items: center;
  background: var(--hue-shade-0);
  justify-content: space-between;
  display: flex;
  font-family: $font-fraunces;
  flex-direction: column;
  margin: 0;
  min-height: 100vh;
  position: relative;
  padding: 4rem 0 0; //need env safe????
  width: calc(100%);
  z-index: 0;

  @include at-least(w0) {
    padding: 0; //need env safe????
  }

  &::before {
    background-color: red;
    content: '';
    display: block;
    grid-column: 1 / -1;
    grid-row: 1 / 1;
    z-index: var(--z-backdrop);
  }
}

.structure {
  flex: 0 0 auto;
  max-width: 90rem;
  transition: transform var(--timing-sidebar-slide-out);
  transform-origin: right var(--percent-scrolled);

  .sidebar.js--expanded ~ .content & {
    // Use `scale3d` to avoid a rerender (since the contents are scaling down,
    // it’s not necessary). Doing so requires a tiny z-axis scale so that
    // content doesn’t flash away in Chrome and Firefox (rendering bug?).
    transform: translateY(calc(var(--height-navbar-difference) * 1rem));
    transition: transform var(--timing-sidebar-slide-in);

    @include at-least(w0) {
      transform: translateX(0) scale3d(var(--scale-nav), var(--scale-nav), .00001);
    }
  }

  & > * {
    margin: 0;
    //outline: 1px solid rgba(0, 230, 230, .5);
    outline-offset: -1px;
  }
}








.pagetitle {
  @extend %typography-title;

  align-items: flex-end;
  align-self: stretch;
  display: flex;
  grid-column: fullwidth;

  @media (min-width: 720px) {
    padding: 0 calc(8rem + 1rem);
  }
}

.summary {
  @extend %typography-summary;

  grid-column: summary;
  padding-bottom: var(--a2);
}

.header {

  justify-content: flex-start;
  align-self: stretch;
  display: flex;
  flex-direction: column;
  grid-column: header;

  h2 {
    @extend %typography-section-heading;

    margin: 0;
  }

  .header__parenthetical {
    color: #888;
    font-size: .875rem;
    font-weight: 400;
    margin-top: .25rem;
  }
}

hr.section-rule {
  border: 0;
  display: block;
  grid-column: fullwidth;
  height: 4rem;
  position: relative;

  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 196dpi) {
    transform: scaleY(.5);
  }

  &::before {
    background-color: #999;
    content: '';
    display: block;
    left: 0;
    height: 1px;
    position: absolute;
    right: 0;
    top: 2rem;
  }
}

h3 {
  grid-column: content;
}

.copyimage {
  align-self: stretch;
  grid-column: aside;
}

p {
  @extend %typography-body;

  grid-column: content;

  .paragraph--beforeimage {
    grid-column: content-aside;
  }
}

.paragraph {
  grid-column: content;
  display: block;

  &::first-line {
    font-weight: 450;
  }

  p {
    margin: 0;
  }
}

.paragraph aside {
  float: right;
  margin-right: calc((var(--a3) * -1) - 1rem); //mind the gap
  min-height: 10rem;
  background: var(--hue-blue-100);
  width: 14rem;
  //clip-path: polygon(7rem 0, 0 10rem, 14rem 10rem);
  //shape-outside: polygon(7rem 0, 0 10rem, 14rem 10rem); //note! negative margins affects percentages for shape outside
}

.spec__key {
  @extend %typography-subheading;

  grid-column: spec-key;
}

.spec__value,
.spec__valuelist {
  grid-column: spec-value;
}

ul {
  grid-column: content;
  list-style: none;
  padding: 0;

  li {
    position: relative;

    &::before {
      background: #aaa;
      border-radius: 50%;
      content: '';
      display: block;
      height: .25rem;
      left: -.75rem;
      position: absolute;
      transform: translate(50%, -50%);
      top: .625rem;
      width: .25rem;
    }
  }

  li + li {
    margin-top: .5rem;
  }
}

// To minimize all repaints, draw the “underline” via box-shadow and
// apply no transitions. Manipualte the background and text colors on hover
// and active. For some extra offset, apply padding and negative margins,
// and then have those decorations cloned for wrapped link lines.
a {
  box-shadow: 0 calc(-1 * var(--padding-link-decoration)) 0 0 var(--translucent-red-20) inset;
  box-decoration-break: clone;
  -webkit-box-decoration-break: clone;
  background-color: rgba(213,47,10,0);
  color: var(--hue-red-500);
  margin: 0 calc(-1 * var(--padding-link-decoration));
  padding: 0 var(--padding-link-decoration);
  transition: background-color .125s, color .125s;
  text-decoration: none;

  &.link--no-underline {
    box-shadow: none;
  }

  &:hover, &:focus {
    background-color: var(--hue-red-500);
    color: var(--hue-shade-0);
  }

  &:focus-visible {
    outline: 1px solid var(--hue-red-700);
  }

  // Ever tried click-n-dragging in Safari? The color isn’t inherited. Ugh.
  &:active {
    color: var(--hue-shade-100);
    background-color: var(--hue-red-700);
    transition: none;
  }
}













// Grid properties are kept here for clarity.
.structure {
  // Essentially single-column, with a
  // narrow ending sidebar for a little variation.
  display: grid;
  grid-template:
    minmax(min-content, 20vh) auto /
    [header-start fullwidth-start content-start summary-start content-aside-start aside-start spec-key-start spec-value-start gallery-start] 6fr
    [content-end content-aside-end spec-key-end spec-value-end summary-end] 1fr
    [header-end aside-end fullwidth-end gallery-end];
  grid-gap: 1rem;
  align-items: baseline;

  @include at-least(w0) {
    grid-template:
      minmax(min-content, 24vh) auto /
      [sidebar-start] calc(var(--width-sidebar-collapsed) * 1rem)
      [header-start fullwidth-start content-start summary-start content-aside-start spec-key-start gallery-start] minmax(min-content, 8rem)
      1fr
      [spec-key-end spec-value-start] 1fr
      [content-aside-end aside-start] 1fr
      1fr
      [summary-end content-end header-end] 1fr
      [aside-end fullwidth-end spec-value-end gallery-end];
  }

  @include at-least(w2) {
    grid-template:
      minmax(min-content, 28vh) auto /
      [sidebar-start] calc(var(--width-sidebar-collapsed) * 1rem)
      [header-start fullwidth-start sidebar-end] minmax(min-content, 8rem)
      [header-end content-start summary-start content-aside-start spec-key-start gallery-start] 1fr
      1fr
      [spec-key-end spec-value-start] 1fr
      [content-aside-end aside-start] 1fr
      [summary-end content-end] var(--a3)
      [aside-end fullwidth-end spec-value-end gallery-end] var(--a0)
      [padding-end];
  }

  @media (min-width: 1120px) {
    grid-template:
      minmax(min-content, 36vh) auto /
      [sidebar-start] calc(var(--width-sidebar-collapsed) * 1rem)
      [header-start fullwidth-start] minmax(min-content, 8rem)
      [header-end content-start summary-start content-aside-start spec-key-start gallery-start] 1fr
      [spec-key-end spec-value-start] 1fr
      1fr
      [summary-end content-end content-aside-end aside-start spec-value-end] 1fr
      1fr
      [aside-end fullwidth-end gallery-end] var(--a0)
      [padding-end];
  }
}
