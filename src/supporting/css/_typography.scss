@use "mixins" as *;
@use "variables" as *;

// TYPOGRAPHY
//
// Gonna try using the @extend directive in SCSS to keep styles DRY.
// In order to keep specificity low and minimize the correct-but-odd
// behavior of @extend, I’m using placeholder classes (with %).

%typography-title {
  font-family: $font-jm;
  font-size: var(--b1);
  font-weight: 700;
  letter-spacing: -.06rem;
  line-height: 1.115;

  @include at-least(w1) {
    font-size: var(--a2);
  }
}

%typography-summary {
  font-family: $font-jm;
  font-size: var(--b0);
  letter-spacing: -.033rem;
  line-height: 1.44;
}

%typography-home-primary {
  font-family: $font-fraunces;
  font-size: var(--b0);
  font-variation-settings: "opsz" var(--optical-c), "SOFT" 25, "WONK" 0;
  font-weight: 350;
  letter-spacing: -.012rem;
  line-height: 1.6;
}

%typography-home-body {
  font-family: $font-fraunces;
  font-size: var(--a0);
  font-variation-settings: "opsz"var(--optical-b), "SOFT" 35, "WONK" 0;
  font-weight: 380;
  letter-spacing: -.01rem;
  line-height: 1.8;
}

%typography-home-header {
  font-size: var(--a1);
  font-weight: 900;
  letter-spacing: -.008rem;
  line-height: 1.2;
}

%typography-home-final {
  font-size: var(--a1);
  font-weight: 400;
  letter-spacing: -.04;
  line-height: 1.5;
}

%typography-section-heading {
  font-family: $font-jm;
  font-size: var(--b0);
  font-weight: 700;
  letter-spacing: -.008rem;
  line-height: 1.2;
}

%typography-supporting {
  font-family: $font-jm;
  font-size: var(--b-1);
  font-weight: 400;
  letter-spacing: 0;
  line-height: 1.35;
}

%typography-subheading {
  font-family: $font-jm;
  font-size: var(--a0);
  font-weight: 700;
  letter-spacing: -.0025rem;
  line-height: 1.375;
}

%typography-details {
  font-family: $font-jm;
  font-size: var(--a0);
  font-weight: 400;
  letter-spacing: -.005rem;
  line-height: 1.375;
}

%typography-retrospective-content {
  font-family: $font-fraunces;
  font-variation-settings: "opsz" var(--optical-b), "SOFT" 35, "WONK" 0;
  font-size: var(--a0);
  font-weight: 320;
  letter-spacing: -.005rem;
  line-height: 1.4;
}

%typography-body {
  font-family: $font-fraunces;
  font-size: var(--a0);
  font-variation-settings: "opsz" var(--optical-b), "SOFT" 35, "WONK" 0;
  font-weight: 350;
  letter-spacing: -.007rem;
  line-height: 1.55;
}

%typography-link-title {
  font-family: $font-jm;
  font-size: var(--b0);
  font-weight: 700;
  letter-spacing: -.007rem;
  line-height: 1.15;
}

%typography-link-description {
  font-family: $font-fraunces;
  font-variation-settings: "opsz" var(--optical-b), "SOFT" 35, "WONK" 0;
  font-size: var(--a0);
  font-weight: 320;
  letter-spacing: -.005rem;
  line-height: 1.4;
}

%typography-navigation {
  font-family: $font-jm;
  font-size: var(--a0);
  font-weight: 400;
  letter-spacing: -.015;
  line-height: 1;
}

%typography-footer {
  font-family: $font-jm;
  font-size: var(--a-1);
  font-weight: 400;
  letter-spacing: .005;
  line-height: 1;
}



%link-body {
  // To minimize all repaints, draw the “underline” via box-shadow and
  // apply no transitions. Manipualte the background and text colors on hover
  // and active. For some extra offset, apply padding and negative margins,
  // and then have those decorations cloned for wrapped link lines.

  //display: none !important;
  a {
    box-shadow: 0 calc(-1 * var(--padding-link-decoration)) 0 0 var(--stroke-body-link) inset;
    box-decoration-break: clone;
    -webkit-box-decoration-break: clone;
    background-color: var(--fill-body-link);
    color: var(--color-body-link);
    margin: 0 calc(-1 * var(--padding-link-decoration));
    padding: 0 var(--padding-link-decoration);
    transition: background-color $timing-link, color $timing-link;
    text-decoration: none;

    svg * {
      transition: stroke $timing-link, fill $timing-link;
    }

    &.link--no-underline {
      box-shadow: none;
    }

    &:hover, &:focus {
      background-color: var(--fill-body-link-hover);
      color: var(--color-body-link-hover);
    }

    &:focus-visible {
      outline: 1px solid var(--fill-body-link-hover);
    }

    // Ever tried click-n-dragging in Safari? The color isn’t inherited. Ugh.
    &:active {
      color: var(--color-body-link-active);
      background-color: var(--fill-body-link-active);
      transition: none;

      svg * {
        transition: none;
      }
    }
  }
}
